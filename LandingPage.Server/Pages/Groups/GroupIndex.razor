@page "/groups"
@inject IGroupService _groupService
@inject IJSRuntime _jsRuntime

<AuthorizeView Roles="Admin">
<_DeleteConfirmation IsProcessing="IsLoading" IsConfirmed="ConfirmDelete"></_DeleteConfirmation>

@if(response.Success == false)
{
    <div class="alert alert-danger">
        <h4>@response.Message</h4>
    </div>
}
else
{  
    <div class="row mt-4 mx-4">
        <div class="mx-2">
         <h3>Administrere grupper</h3>
            
        </div>
        <div class="col-12 p-3 table-responsive-sm">
            @if (Groups == null)
            {
                if (IsLoading)
                {
                    <div class="spinner"></div>
                }
                else
                {
                    <p>Ingen grupper</p>
                }   
            }
            else
            {
                <table class="table table-bordered table-hover">
                    <thead class="table-secondary">
                        <tr>
                            <th>Gruppenavn</th>
                            <th>Aktiv</th>
                            <th> 
                                <a href="groups/create" class="btn btn-success">
                                <span class="oi oi-plus" aria-hidden="true"></span> Ny gruppe
                                </a>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var group in Groups)
                        {
                            <tr>
                                <td>@group.GroupName</td>
                                <td>
                                    <input type="checkbox" disabled checked="@group.IsActiveGroup">
                                </td>
                                <td>
                                    <a href="/groups/details/@group.GroupId" class="btn btn-secondary"><i class="bi bi-eye"></i></a>
                                    <a href="@($"groups/edit/{group.GroupId}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i></a>
                                    <button class="btn btn-danger" @onclick="()=>OpenModal(group.GroupId)"><i class="bi bi-trash3"></i></button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            </div>
        </div>
}
</AuthorizeView>

@code {
    private List<GroupReadOnlyDto> Groups;
    private Response<List<GroupReadOnlyDto>> response = new Response<List<GroupReadOnlyDto>> { Success = true };
    public bool IsLoading { get; set; }
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        var response = await _groupService.GetGroups();
        if (response.Success)
        {
            Groups = response.Data;
            IsLoading = false;
        }
    }

    private void OpenModal(int id)
    {
        Id = id;
        _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete(bool isConfirmed)
    {
        IsLoading = true;
        if(isConfirmed && Id != 0)
        {
            var response = await _groupService.Delete(Id);
            if(response.Success)
            {
                await _jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
                await _jsRuntime.SweetAlertSuccess("Gruppe ble slettet.");
                await OnInitializedAsync();
            }
            else
            {
                await _jsRuntime.SweetAlertError("Kan ikke slette.");
            }
        }
        else
        {
            await _jsRuntime.SweetAlertError("Det oppsto en feil.");
        }
        IsLoading = false;      
    }
}
